{"version":3,"sources":["components/Form.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","text","setText","className","main","htmlFor","coloumn","rows","onChange","e","target","value","placeholder","length","split","onClick","toUpperCase","showAlert","navigator","clipboard","writeText","Navbar","theme","href","id","style","customTheme","sepia","changeSepia","dark","changeDark","amoled","changeAmoled","purple","changePurple","oceanic","changeOceanic","themeToggle","type","role","Alert","alertText","message","defaultProps","App","mode","setmode","alert","setalert","msg","setTimeout","backgroundColor","TextColor","document","body","querySelector","color","sepiaColor","darkColor","amoledColor","purpleColor","oceanicColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c57bb846.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport default function Form(props) {\r\n  const [text, setText] = useState('');\r\n  const handleOnchange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const toUpperCase = (e) => {\r\n    setText(text.toUpperCase());\r\n  };\r\n  const copyText = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert('Text copied', 'success');\r\n  };\r\n  const delText = () => {\r\n    setText('');\r\n    props.showAlert('Deleted successfully', 'success');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className='container mx-auto my-4 overflow-hidden'>{props.main}</h3>\r\n      <div className='container mt-2'>\r\n        <div className='mb-3'>\r\n          <label\r\n            htmlFor='exampleFormControlTextarea1'\r\n            className='form-label'\r\n          ></label>\r\n          <div className='container sidebar'>\r\n            <textarea\r\n              className='textarea'\r\n              coloumn='6'\r\n              rows='7'\r\n              onChange={handleOnchange}\r\n              value={text}\r\n              placeholder='Enter Your text here'\r\n            ></textarea>\r\n\r\n            <div className='container mx-auto my-2 details'>\r\n              <p className='charCount'>\r\n                Total Characters : <span>{text.length}</span>\r\n              </p>\r\n              <p className='wordCount'>\r\n                Words Count : <span>{text.split(' ').length - 1}.</span>\r\n              </p>\r\n              {/* <p className='Avg-Time-reading'> Avg-Time-reading: {text}</p> */}\r\n            </div>\r\n            <p className='preview container mx-auto'>\r\n              <span>{text}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <button className='btn btn-primary mx-2' onClick={toUpperCase}>\r\n          To Uppercase\r\n        </button>\r\n        <button className='btn btn-primary mx-2' onClick={delText}>\r\n          Delete text\r\n        </button>\r\n        <button className='btn btn-primary mx-2' onClick={copyText}>\r\n          Copy text\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nForm.defaultProps = {\r\n  main: 'Enter text here',\r\n};\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme} `}\r\n      >\r\n        <div className='container-fluid'>\r\n          <a className='navbar-brand' href='#'>\r\n            Word-Pad\r\n          </a>\r\n\r\n          <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n              <li className='nav-item'>\r\n                <a className='nav-link active' aria-current='page' href='#'>\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div id='custom'>\r\n            <span id='customTheme'>\r\n              <span className='all-divs'>\r\n                <div\r\n                  className='individual-theme'\r\n                  id='sepia'\r\n                  style={props.customTheme.sepia}\r\n                  onClick={props.changeSepia}\r\n                >\r\n                  <span id='theme-text'>Sepia</span>\r\n                </div>\r\n                <div\r\n                  className='individual-theme'\r\n                  id='dark'\r\n                  style={props.customTheme.dark}\r\n                  onClick={props.changeDark}\r\n                >\r\n                  <span id='theme-text'>Dark</span>\r\n                </div>\r\n                <div\r\n                  className='individual-theme'\r\n                  id='amoled'\r\n                  style={props.customTheme.amoled}\r\n                  onClick={props.changeAmoled}\r\n                >\r\n                  <span id='theme-text'>Amoled</span>\r\n                </div>\r\n                <div\r\n                  className='individual-theme'\r\n                  id='purple'\r\n                  style={props.customTheme.purple}\r\n                  onClick={props.changePurple}\r\n                >\r\n                  <span id='theme-text'>Purple</span>\r\n                </div>\r\n                <div\r\n                  className='individual-theme'\r\n                  id='oceanic'\r\n                  style={props.customTheme.oceanic}\r\n                  onClick={props.changeOceanic}\r\n                >\r\n                  <span id='theme-text'>Oceanic</span>\r\n                </div>\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div className='form-check form-switch'>\r\n            <input\r\n              className=' main-input form-check-input'\r\n              onClick={props.themeToggle}\r\n              type='checkbox'\r\n              role='switch'\r\n              id='flexSwitchCheckDefault'\r\n            />\r\n            <label\r\n              className='form-check-label text-primary'\r\n              htmlFor='flexSwitchCheckDefault'\r\n            >\r\n              {props.theme}-mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alertText && (\r\n      <>\r\n        <div\r\n          className={`alert alert-${props.alertText.type} alert-dismissible fade show `}\r\n          role='alert'\r\n        >\r\n          {props.alertText.message}\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n}\r\n","import './App.css';\n\nimport Form from './components/Form';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\n// import About from './components/About';\n\nimport React, { useState } from 'react';\n\n// import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#212127';\n      document.querySelector('textarea').style.backgroundColor = '#212127';\n      document.querySelector('textarea').style.color = '#fff';\n      document.body.style.color = '#fff';\n      showAlert('Dark mode enabled', 'primary');\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = '#fff';\n      document.body.style.color = '#212127';\n      document.querySelector('textarea').style.backgroundColor = '#fff';\n      document.querySelector('textarea').style.color = '#212127';\n      showAlert('Dark mode disabled', 'warning');\n    }\n  };\n\n  const showAlert = (msg, type) => {\n    setalert({\n      message: msg,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  const customTheme = {\n    sepia: { backgroundColor: '#FFEDD6  ' },\n    dark: { backgroundColor: '#1d1c1c' },\n    amoled: { backgroundColor: '#09060F' },\n    purple: { backgroundColor: '#180C1F' },\n    oceanic: { backgroundColor: '#141122' },\n  };\n\n  let TextColor = '#FFF9F9';\n\n  const changeSepia = () => {\n    let sepiaColor = customTheme.sepia.backgroundColor;\n    document.body.style.backgroundColor = sepiaColor;\n    document.body.style.color = 'black';\n    document.querySelector('textarea').style.backgroundColor =\n      customTheme.sepia.backgroundColor;\n    setmode(customTheme.sepia.backgroundColor);\n  };\n  const changeDark = () => {\n    let darkColor = customTheme.dark.backgroundColor;\n    document.body.style.color = TextColor;\n    document.body.style.backgroundColor = TextColor;\n    document.body.style.backgroundColor = darkColor;\n\n    document.querySelector('textarea').style.backgroundColor =\n      customTheme.dark.backgroundColor;\n    document.querySelector('textarea').style.color = TextColor;\n    setmode(customTheme.dark.backgroundColor);\n  };\n  const changeAmoled = () => {\n    let amoledColor = customTheme.amoled.backgroundColor;\n    document.body.style.color = TextColor;\n    document.body.style.backgroundColor = TextColor;\n    document.body.style.backgroundColor = amoledColor;\n    document.querySelector('textarea').style.backgroundColor =\n      customTheme.amoled.backgroundColor;\n    document.querySelector('textarea').style.color = TextColor;\n    setmode(customTheme.amoled.backgroundColor);\n  };\n  const changePurple = () => {\n    let purpleColor = customTheme.purple.backgroundColor;\n    document.body.style.color = TextColor;\n    document.body.style.backgroundColor = TextColor;\n    document.body.style.backgroundColor = purpleColor;\n\n    document.querySelector('textarea').style.backgroundColor =\n      customTheme.purple.backgroundColor;\n    document.querySelector('textarea').style.color = TextColor;\n    setmode(customTheme.purple.backgroundColor);\n  };\n\n  const changeOceanic = () => {\n    let oceanicColor = customTheme.oceanic.backgroundColor;\n    document.body.style.color = TextColor;\n    document.body.style.backgroundColor = TextColor;\n    document.body.style.backgroundColor = oceanicColor;\n\n    document.querySelector('textarea').style.backgroundColor =\n      customTheme.oceanic.backgroundColor;\n    document.querySelector('textarea').style.color = TextColor;\n    setmode(customTheme.oceanic.backgroundColor);\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      {/* <div className='container'> */}\n      <Navbar\n        theme={mode}\n        themeToggle={toggleMode}\n        showAlert={showAlert}\n        customTheme={customTheme}\n        changeSepia={changeSepia}\n        changeDark={changeDark}\n        changeAmoled={changeAmoled}\n        changePurple={changePurple}\n        changeOceanic={changeOceanic}\n      />\n      <Form showAlert={showAlert} />\n      <Alert alertText={alert} />\n      {/* </div> */}\n      {/* <Routes> */}\n      {/* <Route */}\n      {/* exact\n            path='/about'\n            element={<About title='Word-Pad - About' />}\n          ></Route> */}\n      {/* <Route exact path='/' element=/>} /> */}\n      {/* </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n// export default Switch();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}